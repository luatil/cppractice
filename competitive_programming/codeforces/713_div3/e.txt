n = 5
l = 3
r = 5
s = 8

p = [3, 4, 5, 2, 1]
p = [5, 2, 4, 3, 1]
p = [5, 2, 1, 3, 4]


p = [x, x, x, x, x]
l = 3
r = 5
s = 8
[x, x, 1, 2, 5] 

And them just fill the rest.

This is because of a property of this type of permutation. 

What is the min value? 

min_value = (r - l + 1) * (r - l + 2) / 2;

What is the max value? 

(r - l + 1) * (r - l + 1) / 2 + (r - l + 1) * (n - (r - l))

max_value = min_value + (r - l + 1) * (n - (r - l));

If the answer is between them, you can always form the interval. 

And you can start with the lowest elements? 

You take the largest element that fits considering the remaining range. 

So it could be usefull to create a function for min value. 

You can keep two sets and iterate from 0 to l-1 on the first l to r on the second and them 
back to the first until the end. 

This should always work.
