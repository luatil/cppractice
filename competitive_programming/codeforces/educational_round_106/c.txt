5
4 3 2 1 4

4 * x1 + 3 * y1 + 2 * x2 + 1 * y2 + 4 * x3

I want to find the minimum values such that the sum of the x's and the sum of y's are equal to 5

2
4 3
4 * 2 + 3 * 2 = 14
// Only choice

3 
3 4 3
It does not matter if the partition, 

How would I solve if only horizontal? 
3
2 2 1

I am thinking of something like minimum cost
0 2 4
2 2 1 

For 
5
4 3 2 1 4

F(n) = F(n-1) + minimum_horizontal and minimum_vertical

F(1) = 4 + 3 = 7
F(2) = Can use the new ones or raise the previous ones, since the new ones are smaller i will choose them
     = 4 + 3 + 2 + 1 = 10
F(3) = 4 + 3 + 2*2 + 1*2 = 13
F(4) = 4 + 3 + 2*3 + 1*3 = 16
F(5) = 4 + 3 + 2*4 + 1*4 = 19


8 2 4 3 14 3 2 1
F(1) = 10 // min_x = 4, min_y = 2
F(2) = F(1) + min(4, 8) + min(2, 3) // min_x = 4, min_y = 2
F(3) = F(2) + min(4, min_x) + min(2, 2) // Yeah, this does not work because you can't access the 2cost without paying for the 4's

But if the weight carry is valid once, it keeps being valid

8 2 4 3 14 3 2 1 // this also does work because you can only go two in two
F(1) = 10 // min_x = 4, min_y = 2
F(2) = F(1) + min(4, 8) + min(2, 3) // min_x = 4, min_y = 2
F(3) = F(2) + min(4, min_x) + min(2, 2) // Yeah, this does not work because you can't access the 2cost without paying for the 4's

well, what you are comparing is actually -> 
5, 5

1, 1, 4, 4 
1, 4, 4, 1

1, 1, 1, 1, 3, 3
1, 1, 1, 3, 3, 1
1, 3, 1, 1, 3, 1


1, 1, 1, 1, 1, 1, 2, 2,
1, 1, 1, 1, 1, 1, 1, 1


8 2 4 3 14 3 2 1 
First partial sum // exclusive sum // simple rotation
8 10 14 17 31 34 36 37 
then 
5, 5, 4, 4, 3, 3, 2, 2
then compute the totals using each path to the max
x, 50,  


4, 3, 2, 1, 4
0  4  7  9  10 
